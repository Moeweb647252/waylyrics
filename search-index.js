var searchIndex = new Map(JSON.parse('[\
["waylyrics",{"doc":"","t":"SSSSJSSJCCQCCCQCSSFHCHOOCCHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNOONNNNNNNONNNOOOOOONNNONONNNNNNGPFPPGPPPPPFNNNNNNNNOONNNNNNNNNNNOONNNNONNNNOOOOOOOOOONNNNOOONNONNNNNNNNNNNNNNNNQQQQQGPPGFFGKKFPPPPPPFONNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNMOOCMMHCMMMNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNMCNNNNNNNFNNNNNNNNNNNNNNNNNNHNPPGPJFNNNNNNNNNNHNNNNNNNNNNNNNNNNNNHNNHHHSFSFFCOONNNNNNONNNNNNNNNNNNNNNNNCNNNOHCOOOHHHHHEHCONNNONNNNNNNNNNOCNNNHHHHHCHPPFGPNNNNECENNNNEONNECOENNNNNNNNHSSHHHCEHECHHHHHHCCCFNNNHNHNHOONONNNHNHHCPPGGPPNNNNNNNHHNNNNNNNNNNOOOOHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPPPFFPPFONNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNOONNNNNNNNONNNNNNOONNOOOONOONNNNNNNNNNNNNNNNNNOONNNNHHPPPGNNNNNNHNHHHHHNNNNNN","n":["APP_ID","CACHE_DIR","DEFAULT_TEXT","EXCLUDED_REGEXES","LYRIC_PROVIDERS","MAIN_WINDOW","THEME_PATH","TOKIO_RUNTIME","app","config","glib_spawn","log","lyric_providers","sync","tokio_spawn","utils","REMOVE_LYRICS","WINDOW_MIN_HEIGHT","Window","build_main_window","dialog","get_label","inner","phantom","utils","window","show_dialog","has_filtered_word","merge_css","set_click_pass_through","setup_label","Window","add_weak_ref_notify","add_weak_ref_notify_local","bind_property","block_signal","borrow","borrow_mut","class","class_of","clone","clone_into","cmp","compare","connect","connect_closure","connect_closure_id","connect_id","connect_local","connect_local_id","connect_notify","connect_notify_local","connect_notify_unsafe","connect_unsafe","connect_unsafe_id","data","disconnect","downgrade","emit","emit_by_name","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_with_details","emit_with_details_and_values","emit_with_values","ensure_type","eq","equivalent","equivalent","equivalent","find_property","fmt","freeze_notify","from","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","get","has_property","hash","imp","imp","inner","interface","into","into_closure_return_value","is","list_properties","load_window_state","new","notify","notify_by_pspec","object_class","param_spec_builder","parent_class_init","parent_instance_init","partial_cmp","phantom","property","property_type","property_value","qdata","ref_count","run_dispose","save_window_state","set_data","set_properties","set_properties_from_value","set_property","set_property_from_value","set_qdata","settings","setup_settings","static_type","steal_data","steal_qdata","stop_signal_emission","stop_signal_emission_by_name","to_owned","try_from","try_from_closure_return_value","try_into","type_","type_id","unblock_signal","vzip","watch_closure","Window","borrow","borrow_mut","cache_lyrics","clickthrough","close_request","constructed","default","downgrade","from","from_instance","from_obj","headerbar","instance","instance_data","into","length_toleration_ms","lyric_display_mode","lyric_offset_ms","lyric_start","menu","menubutton","new","obj","ref_counted","settings","size_allocate","submenu","try_from","try_into","type_","type_data","type_id","vzip","Align","Center","Config","End","Fill","LyricDisplay","Origin","PreferTranslation","ShowBoth","ShowBothRev","Start","Triggers","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_lyrics","click_pass_through","clone","clone","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","enable_filter_regex","filter_regexies","from","from","from","from","hide_label_on_empty_text","into","into","into","into","length_toleration","lyric_align","lyric_display_mode","lyric_search_source","lyric_update_interval","player_sync_interval","qqmusic_api_base_url","refetch_lyric","reload_theme","search_lyric","serialize","serialize","serialize","serialize","switch_decoration","switch_passthrough","theme","to_owned","to_owned","triggers","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","debug","error","info","trace","warn","Error","LineTimestamp","LineTimestamp","Lyric","LyricLine","LyricLineOwned","LyricOwned","LyricParse","LyricProvider","LyricStore","NoLyric","NoResult","NoTimestamp","NoTimestamp","None","None","SongInfo","album","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default_search_query","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","init","into","into","into","into","into","into","into","into_owned","into_owned","is_likely_songid","length","lyric","netease","parse_lyric","parse_translated_lyric","provider_fmt","qqmusic","query_lyric","search_song","search_song_detailed","serialize","serialize","singer","start_time","start_time","text","text","title","tlyric","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_name","utils","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Netease","borrow","borrow_mut","clone","clone_into","from","init","into","is_likely_songid","parse_lyric","parse_translated_lyric","query_lyric","search_song","search_song_detailed","to_owned","try_from","try_into","type_id","unique_name","verify_lyric","vzip","ApiClientInited","ApiClientNotInit","Error","NotImplemented","QQMUSIC_API_CLIENT","QQMusic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","get_songmid","init","into","into","is_likely_songid","parse_lyric","parse_translated_lyric","query_lyric","search_song","search_song_detailed","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unique_name","verify_lyric","vzip","vzip","find_next_lyric","get_provider","lrc_iter","LYRIC","LyricState","TRACK_PLAYING_STATE","TrackMeta","TrackState","acts","album","artists","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_path","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","interop","into","into","into","length","list_player_names","lyric","metainfo","origin","paused","register_action_connect","register_action_disconnect","register_action_refetch_lyric","register_action_remove_lyric","register_action_search_lyric","register_lyric_display","register_sync_task","search_window","title","to_owned","to_owned","to_owned","translation","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique_song_id","utils","vzip","vzip","vzip","register_action_connect","register_action_disconnect","register_action_refetch_lyric","register_action_remove_lyric","register_action_search_lyric","utils","bind_shortcut","Missing","Paused","PlayerId","PlayerStatus","Unsupported","borrow","borrow","borrow_mut","borrow_mut","clean_player","common","connect_player_with_id","fmt","fmt","from","from","hint_from_player","inner_id","into","into","list_player_names","mpris","player_name","register_sync_task","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","update_lyric","PLAYER","PLAYER_FINDER","clean_player","connect_player_with_id","find_players","hint","hint_from_player","list_player_names","register_sync_task","sync_task","get_field_from_player","hint_from_player","need_fetch_lyric","register_sync_task","sync_position","sync_track","cache","fetch","scroll","LyricCache","borrow","borrow_mut","deserialize","fetch_lyric_cached","from","get_cache_path","into","md5_cache_dir","offset","olyric","serialize","tlyric","try_from","try_into","type_id","update_lyric_cache","vzip","fetch_lyric","set_lyric","tricks","Lyric","LyricFile","LyricHint","LyricHintResult","Metadata","SongId","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","get_lrc_path","get_lyric_hint_from_player","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","provider","song_id","olyric","tlyric","refresh_lyric","register_lyric_display","set_lyric","set_lyric_with_mode","ResultObject","Window","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","album","bind_property","bind_property","block_signal","block_signal","borrow","borrow","borrow_mut","borrow_mut","class","class","class_of","class_of","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","connect","connect","connect_album_notify","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_factory","connect_id","connect_id","connect_id_notify","connect_length_notify","connect_local","connect_local","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_provider_idx_notify","connect_provider_name_notify","connect_singer_notify","connect_title_notify","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","data","data","disconnect","disconnect","downgrade","downgrade","emit","emit","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","ensure_type","ensure_type","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_property","find_property","fmt","fmt","format_length","freeze_notify","freeze_notify","from","from","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","get","get","get_selected_result","has_property","has_property","hash","hash","id","imp","imp","imp","inner","inner","interface","interface","into","into","into_closure_return_value","into_closure_return_value","is","is","length","list_properties","list_properties","new","new","notify","notify","notify_album","notify_by_pspec","notify_by_pspec","notify_id","notify_length","notify_provider_idx","notify_provider_name","notify_singer","notify_title","object_class","object_class","param_spec_builder","param_spec_builder","parent_class_init","parent_class_init","parent_instance_init","parent_instance_init","partial_cmp","partial_cmp","phantom","phantom","property","property","property_type","property_type","property_value","property_value","provider_idx","provider_name","qdata","qdata","ref_count","ref_count","results","run_dispose","run_dispose","search","set_album","set_data","set_data","set_id","set_length","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property_from_value","set_property_from_value","set_provider_idx","set_provider_name","set_qdata","set_qdata","set_singer","set_title","setup_callbacks","setup_factory","setup_results","setup_ui","singer","static_type","static_type","steal_data","steal_data","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","title","to_owned","to_owned","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","type_","type_","type_id","type_id","unblock_signal","unblock_signal","vzip","vzip","watch_closure","watch_closure","Album","DerivedPropertiesEnum","Id","Length","ProviderIdx","ProviderName","ResultData","ResultObject","Singer","Title","Window","album","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","column_album","column_length","column_singer","column_source","column_title","constructed","data","default","default","default","derived_properties","derived_property","derived_set_property","downgrade","downgrade","fmt","from","from","from","from","from_instance","from_instance","from_obj","from_obj","id","input","instance","instance","instance_data","instance_data","into","into","into","into","length","new","new","obj","obj","properties","property","provider_idx","provider_name","ref_counted","ref_counted","result_list","result_scrolled_window","results","set_button","set_property","singer","title","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_","type_data","type_data","type_id","type_id","type_id","type_id","use_cache","vbox","vzip","vzip","vzip","vzip","clean_lyric","match_likely_lyric","ExceedsLimits","IllFormed","InvalidDecimal","ParseError","borrow","borrow_mut","fmt","fmt","from","from","init_dirs","into","parse_time","register_action_reload_theme","register_action_switch_decoration","register_action_switch_passthrough","reset_lyric_labels","source","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"waylyrics"],[16,"waylyrics::app"],[26,"waylyrics::app::dialog"],[27,"waylyrics::app::utils"],[31,"waylyrics::app::window"],[161,"waylyrics::app::window::imp"],[195,"waylyrics::config"],[275,"waylyrics::log"],[280,"waylyrics::lyric_providers"],[407,"waylyrics::lyric_providers::netease"],[428,"waylyrics::lyric_providers::qqmusic"],[466,"waylyrics::lyric_providers::utils"],[469,"waylyrics::sync"],[539,"waylyrics::sync::acts"],[545,"waylyrics::sync::acts::utils"],[546,"waylyrics::sync::interop"],[578,"waylyrics::sync::interop::common"],[579,"waylyrics::sync::interop::mpris"],[589,"waylyrics::sync::interop::mpris::hint"],[591,"waylyrics::sync::interop::mpris::sync_task"],[595,"waylyrics::sync::lyric"],[598,"waylyrics::sync::lyric::cache"],[616,"waylyrics::sync::lyric::fetch"],[619,"waylyrics::sync::lyric::fetch::tricks"],[644,"waylyrics::sync::lyric::fetch::tricks::LyricHint"],[646,"waylyrics::sync::lyric::fetch::tricks::LyricHintResult"],[648,"waylyrics::sync::lyric::scroll"],[652,"waylyrics::sync::search_window"],[940,"waylyrics::sync::search_window::imp"],[1038,"waylyrics::sync::utils"],[1040,"waylyrics::utils"],[1063,"gtk4::auto::application"],[1064,"gtk4::enums"],[1065,"core::convert"],[1066,"core::marker"],[1067,"gtk4::auto::label"],[1068,"core::option"],[1069,"gtk4::auto::enums"],[1070,"gtk4::auto::window"],[1071,"glib::object"],[1072,"glib::object"],[1073,"core::marker"],[1074,"glib::object"],[1075,"glib::value"],[1076,"core::ops::function"],[1077,"glib::subclass::signal"],[1078,"glib::quark"],[1079,"glib::param_spec"],[1080,"core::ptr::non_null"],[1081,"glib::object"],[1082,"core::fmt"],[1083,"alloc::vec"],[1084,"glib_sys"],[1085,"core::hash"],[1086,"glib::object"],[1087,"glib::object"],[1088,"glib::subclass::types"],[1089,"core::result"],[1090,"gio::auto::settings"],[1091,"core::any"],[1092,"glib::closure"],[1093,"glib::subclass::types"],[1094,"serde::ser"],[1095,"alloc::string"],[1096,"anyhow"],[1097,"core::future::future"],[1098,"alloc::boxed"],[1099,"core::pin"],[1100,"qqmusic_rs"],[1101,"reqwest::async_impl::client"],[1102,"core::time"],[1103,"alloc::sync"],[1104,"lrc_nom"],[1105,"core::iter::traits::iterator"],[1106,"mpris::metadata"],[1107,"anyhow"],[1108,"std::path"],[1109,"md5"],[1110,"gtk4::auto::column_view_column"],[1111,"gio::auto::list_store"],[1112,"core::borrow"],[1113,"rust_decimal::error"],[1114,"core::error"]],"d":["","","","","","","","","","","","","","","Used with functions requiring reqwest.","","","","","","","","","","","","","","set css style for waylyrics As said in GTK+ doc, gtk …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","(default)","","right align","","","","","","","left align","check GTK+’s official document for trigger format","","","","","","","","","whether to cache lyrics note: persistenced lyric offset …","whether to allow mouse-click passthrough","","","","","","","","","","","","","hide lyric if it matches any of these regexies inspired by …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","whether to set <code>visable</code> as <code>false</code> when a label is empty","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","waylyrics matches lyrics with <code>weights</code> if …","the way two lyric label align in possible values: center, …","lyric display mode avaliable options:","avaliable options: 网易云音乐, QQ音乐","the interval waylyrics refreshes lyric labels","the interval waylyrics updates position/metadata from …","","try to refetch lyric","reapply current theme file","manually search lyric","","","","","whether to show GTK+ CSD","whether to allow mouse click-through","theme to load (.css)","","","shortcuts when focusing on waylyrics for global ones, …","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","Constructs an event at the error level.","Constructs an event at the info level.","Constructs an event at the trace level.","Constructs an event at the warn level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","parses lrc tags in each line ignores lines not started …","","","A global variable that contains current playing state …","metadata from connected player","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","This will not create cache dir for you – you should …","Calls <code>U::from(self)</code>.","","","","","","","","","Using olyric and tlyric inside LYRIC to update …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","replace file extension with .lrc","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,69,0,69,69,0,4,4,4,4,69,0,69,4,70,71,69,4,70,71,70,70,69,4,69,4,4,70,71,69,4,70,71,70,70,69,4,70,71,70,69,4,70,71,70,70,70,70,70,70,70,71,71,71,69,4,70,71,71,71,70,69,4,70,69,4,70,71,69,4,70,71,69,4,70,71,69,4,70,71,0,0,0,0,0,0,77,74,0,0,0,0,0,0,0,80,80,77,74,77,74,0,79,84,77,78,74,75,79,80,84,77,78,74,75,79,80,74,75,74,75,74,75,0,74,75,74,75,74,74,74,75,75,75,77,78,74,75,79,80,80,84,77,78,74,75,79,80,79,81,84,77,78,74,75,79,80,77,78,81,79,84,0,83,83,0,0,81,81,81,74,75,79,78,75,78,75,79,84,74,75,80,84,77,78,74,75,79,80,84,77,78,74,75,79,80,84,77,78,74,75,79,80,81,0,84,77,78,74,75,79,80,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,88,90,90,0,90,0,0,89,90,89,90,89,89,90,90,89,90,0,89,89,90,89,89,89,89,89,89,89,90,89,90,89,90,89,90,89,0,89,90,0,0,0,0,0,0,0,0,0,98,98,98,99,100,98,99,100,99,98,99,100,98,99,100,99,100,98,98,98,98,98,99,98,99,100,0,98,99,100,98,0,0,99,100,99,0,0,0,0,0,0,0,0,98,98,99,100,100,98,98,99,100,98,99,100,98,99,100,98,0,98,99,100,0,0,0,0,0,0,0,103,103,0,0,103,103,101,103,101,0,0,0,103,101,103,101,0,101,103,101,0,0,101,0,103,101,103,101,103,101,103,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,107,107,0,107,0,107,0,107,107,107,107,107,107,107,0,107,0,0,0,110,106,0,0,106,106,110,106,110,106,106,110,106,0,0,110,106,110,106,110,106,110,106,110,106,125,125,126,126,0,0,0,0,0,0,111,112,111,112,111,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,111,112,111,112,0,111,112,111,111,111,112,111,112,111,112,111,112,111,112,111,111,111,111,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,111,111,112,112,112,111,112,111,112,0,111,112,111,112,111,111,111,111,111,111,112,112,112,112,112,112,111,111,111,111,111,111,112,112,112,112,112,112,111,111,111,111,111,111,112,112,112,112,112,112,111,111,111,111,111,111,112,112,112,112,112,112,111,111,111,111,111,111,112,112,112,112,112,112,111,111,111,111,111,111,112,112,112,112,112,112,111,112,112,111,112,111,112,111,0,111,112,111,112,111,112,111,112,111,112,111,112,111,111,112,111,112,111,112,111,111,112,111,111,111,111,111,111,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,111,111,112,111,112,112,111,112,112,111,111,112,111,111,111,112,111,112,111,112,111,112,111,111,111,112,111,111,112,112,112,112,111,111,112,111,112,111,112,111,112,111,112,111,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,111,112,117,0,117,117,117,117,0,0,117,117,0,119,119,117,120,118,119,117,120,118,117,117,118,118,118,118,118,118,120,119,120,118,120,120,120,120,118,117,119,117,120,118,120,118,120,118,119,118,120,118,120,118,119,117,120,118,119,120,118,120,118,120,120,119,119,120,118,118,118,118,118,120,119,119,117,119,117,117,120,118,119,117,120,118,120,118,120,118,119,117,120,118,118,118,119,117,120,118,0,0,122,122,122,0,122,122,122,122,122,122,0,122,0,0,0,0,0,122,122,122,122,122,122],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,2,2,2,3,-1,4],5,[[7,[6]],8]],0,[[5,9],10],0,0,0,0,[[[11,[-1]],9,12],13,[[15,[14]]]],[9,2],[9,13],[[5,2],13],[[10,2,2],13],0,[[-1,-2],[[16,[-3]]],[],[17,18],[]],[[-1,-2],[[16,[-3]]],[],17,[]],[[-1,9,-2,9],19,[],20],[[-1,21],13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],23],[-1,[[11,[[22,[-2]]]]],[],23],[5,5],[[-1,-2],13,[],[]],[[5,5],24],[[-1,-2],24,[],[]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[-1,9,2,30],21,[]],[[-1,31,[11,[32]],2,30],21,[]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]],18,29]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,9],[[11,[[34,[-2]]]]],[],[]],[[-1,21],13,[]],[-1,[[35,[-2]]],[],[]],[[-1,31,[26,[36]]],-2,[],37],[[-1,9,[26,[36]]],-2,[],37],[[-1,9,32,[26,[36]]],-2,[],37],[[-1,9,32,[26,[25]]],[[11,[25]]],[]],[[-1,9,[26,[25]]],[[11,[25]]],[]],[[-1,31,32,[26,[36]]],-2,[],37],[[-1,31,32,[26,[25]]],[[11,[25]]],[]],[[-1,31,[26,[25]]],[[11,[25]]],[]],[[],13],[[5,-1],2,20],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,9],[[11,[33]]],[]],[[5,38],39],[-1,40,[]],[-1,-1,[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[-1,-3],-2,[],[],[[28,[],[[27,[-2]]]]]],[[-1,9,[11,[46]]],2,[]],[[5,-1],13,47],0,[-1,[],[]],0,[-1,[[11,[[48,[-2]]]]],[],49],[-1,-2,[],[]],[-1,[[11,[25]]],[]],[-1,2,[]],[-1,[[50,[33]]],[]],[5,13],[[1,2,2],5],[[-1,9],13,[]],[[-1,33],13,[]],[-1,[[22,[51]]],[]],[[],-1,[]],[[[22,[-1]]],13,[]],[[[52,[-1]]],13,53],[[5,-1],[[11,[24]]],20],0,[[-1,9],-2,[],54],[[-1,9],[[11,[46]]],[]],[[-1,9],25,[]],[[-1,32],[[11,[[34,[-2]]]]],[],[]],[-1,55,[]],[-1,13,[]],[5,[[57,[13,56]]]],[[-1,9,-2],13,[],[]],[[-1,[26,[[13,[9,36]]]]],13,[]],[[-1,[26,[[13,[9,25]]]]],13,[]],[[-1,9,-2],13,[],[[7,[25]]]],[[-1,9,25],13,[]],[[-1,32,-2],13,[],[]],[5,58],[5,13],[[],46],[[-1,9],[[11,[-2]]],[],[]],[[-1,32],[[11,[-2]]],[],[]],[[-1,31,[11,[32]]],13,[]],[[-1,9],13,[]],[-1,-2,[],[]],[-1,[[57,[-2]]],[],[]],[[[11,[25]]],[[57,[-1,56]]],[]],[-1,[[57,[-2]]],[],[]],[-1,46,[]],[-1,59,[]],[[-1,21],13,[]],[-1,-2,[],[]],[[-1,-2],13,[],[[61,[60]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[62,63],[62,13],[[],62],[62,-1,[]],[-1,-1,[]],[[],-1,[]],[[],-1,[]],0,[-1,64,[]],[[-1,46],[[11,[-2]]],[],[65,18,29]],[-1,-2,[],[]],0,0,0,0,0,0,[[],62],[-1,64,[]],[-1,[[66,[-2]]],[],[]],0,[[62,67,67,67],13],0,[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[[],46],[[],[[34,[68]]]],[-1,59,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[69,69],[4,4],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],4],[[],70],[[],71],[-1,[[57,[69]]],72],[-1,[[57,[4]]],72],[-1,[[57,[70]]],72],[-1,[[57,[71]]],72],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[69,-1],57,73],[[4,-1],57,73],[[70,-1],57,73],[[71,-1],57,73],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[75,75],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],74],[[],75],[[9,[26,[9]],9],76],[-1,[[57,[74]]],72],[-1,[[57,[75]]],72],[[74,74],2],[[75,75],2],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[77,38],39],[[78,38],39],[[74,38],39],[[75,38],39],[[79,38],39],[[80,38],39],[[80,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[81,9],[[82,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,74],[78,75],[[81,9],2],0,0,0,[[83,84],74],[[83,84],74],[[-1,38],39,[[61,[81]]]],0,[[81,9],[[87,[[86,[85]]]]]],[[81,9],[[87,[[86,[85]]]]]],[[81,9,[26,[9]],9],[[87,[[86,[85]]]]]],[[74,-1],57,73],[[75,-1],57,73],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,76,[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[81,9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[[-1,-2],13,[],[]],[-1,-1,[]],[[88,9],[[82,[13]]]],[-1,-2,[],[]],[[88,9],2],[[88,84],74],[[88,84],74],[[88,9],[[87,[[86,[85]]]]]],[[88,9],[[87,[[86,[85]]]]]],[[88,9,[26,[9]],9],[[87,[[86,[85]]]]]],[-1,-2,[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[88,9],[[[11,[9]]],77],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[89,89],[[-1,-2],13,[],[]],[[90,38],39],[[90,38],39],[-1,-1,[]],[-1,-1,[]],[[91,92,9],[[82,[76]]]],[[89,9],[[82,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[89,9],2],[[89,84],74],[[89,84],74],[[89,9],[[87,[[86,[85]]]]]],[[89,9],[[87,[[86,[85]]]]]],[[89,9,[26,[9]],9],[[87,[[86,[85]]]]]],[-1,-2,[],[]],[-1,76,[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[89,9],[[[11,[9]]],74],[-1,-2,[],[]],[-1,-2,[],[]],[[93,[26,[75]]],[[11,[75]]]],[9,[[11,[[94,[81]]]]]],[-1,[[57,[[42,[78]],95]]],[[97,[],[[96,[9]]]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[98,98],[99,99],[100,100],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],99],[[],100],[[98,98],2],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[98,38],39],[[99,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[42,[101]]]],0,0,0,0,[1,13],[1,13],[[1,5,9],13],[[1,5],13],[[1,5,9],13],0,[[[35,[1]],93],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[102,[[57,[98,-1]]],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,13],[1,13],[[1,5,9],13],[[1,5],13],[[1,5,9],13],0,[[-1,5,-2],13,[[61,[9]]],[[61,[9]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[103,38],39],[[101,38],39],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,5,2],[[57,[13,104]]]],0,0,[[],13],[-1,13,[[61,[9]]]],[[],[[42,[105]]]],0,0,[[],[[42,[101]]]],0,0,[[105,-1],[[11,[76]]],[[17,[102],[[27,[[11,[9]]]]]]]],[[],[[11,[106]]]],[98,2],[[[35,[1]],93],13],[[105,5],[[57,[13,103]]]],[5,[[57,[13,103]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[57,[107]]],72],[[98,2,5],[[82,[13]]]],[-1,-1,[]],[98,[[11,[108]]]],[-1,-2,[],[]],[109,108],0,0,[[107,-1],57,73],0,[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[108,13],[-1,-2,[],[]],[[98,5],[[82,[13]]]],[[74,74,9,9,5],13],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[106,38],39],[-1,-1,[]],[-1,-1,[]],[108,[[11,[108]]]],[[],[[11,[110]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,59,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[5,13],[[[35,[1]],93],13],[[5,[11,[75]],9],13],[[5,[11,[75]],[11,[75]]],13],0,0,[[-1,-2],[[16,[-3]]],[],[17,18],[]],[[-1,-2],[[16,[-3]]],[],[17,18],[]],[[-1,-2],[[16,[-3]]],[],17,[]],[[-1,-2],[[16,[-3]]],[],17,[]],[111],[[-1,9,-2,9],19,[],20],[[-1,9,-2,9],19,[],20],[[-1,21],13,[]],[[-1,21],13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],23],[-1,[[22,[-2]]],[],23],[-1,[[11,[[22,[-2]]]]],[],23],[-1,[[11,[[22,[-2]]]]],[],23],[111,111],[112,112],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[111,111],24],[[112,112],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[111,-1],21,[[28,[111]]]],[[-1,9,2,30],21,[]],[[-1,9,2,30],21,[]],[[-1,31,[11,[32]],2,30],21,[]],[[-1,31,[11,[32]],2,30],21,[]],[[113,-1,2],13,[[28,[111],[[27,[76]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]],18,29]],[[111,-1],21,[[28,[111]]]],[[111,-1],21,[[28,[111]]]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]],18,29]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]],18,29]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[-1,[11,[9]],-3],21,[],[],[[28,[-2,33]]]],[[111,-1],21,[[28,[111]]]],[[111,-1],21,[[28,[111]]]],[[111,-1],21,[[28,[111]]]],[[111,-1],21,[[28,[111]]]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,9,2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,31,[11,[32]],2,-2],21,[],[[28,[[26,[25]]],[[27,[[11,[25]]]]]]]],[[-1,9],[[11,[[34,[-2]]]]],[],[]],[[-1,9],[[11,[[34,[-2]]]]],[],[]],[[-1,21],13,[]],[[-1,21],13,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[[-1,31,[26,[36]]],-2,[],37],[[-1,31,[26,[36]]],-2,[],37],[[-1,9,[26,[36]]],-2,[],37],[[-1,9,[26,[36]]],-2,[],37],[[-1,9,32,[26,[36]]],-2,[],37],[[-1,9,32,[26,[36]]],-2,[],37],[[-1,9,32,[26,[25]]],[[11,[25]]],[]],[[-1,9,32,[26,[25]]],[[11,[25]]],[]],[[-1,9,[26,[25]]],[[11,[25]]],[]],[[-1,9,[26,[25]]],[[11,[25]]],[]],[[-1,31,32,[26,[36]]],-2,[],37],[[-1,31,32,[26,[36]]],-2,[],37],[[-1,31,32,[26,[25]]],[[11,[25]]],[]],[[-1,31,32,[26,[25]]],[[11,[25]]],[]],[[-1,31,[26,[25]]],[[11,[25]]],[]],[[-1,31,[26,[25]]],[[11,[25]]],[]],[[],13],[[],13],[[111,-1],2,20],[[112,-1],2,20],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,9],[[11,[33]]],[]],[[-1,9],[[11,[33]]],[]],[[111,38],39],[[112,38],39],[114,76],[-1,40,[]],[-1,40,[]],[-1,-1,[]],[-1,-1,[]],[44,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[44,[[42,[-1]]],[]],[41,[[42,[-1]]],[]],[43,[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[41,45],[[42,[-1]]],[]],[[44,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[43,45],[[42,[-1]]],[]],[[-1,-3],-2,[],[],[[28,[],[[27,[-2]]]]]],[[-1,-3],-2,[],[],[[28,[],[[27,[-2]]]]]],[112,[[11,[111]]]],[[-1,9,[11,[46]]],2,[]],[[-1,9,[11,[46]]],2,[]],[[111,-1],13,47],[[112,-1],13,47],[111],0,[-1,[],[]],[-1,[],[]],0,0,[-1,[[11,[[48,[-2]]]]],[],49],[-1,[[11,[[48,[-2]]]]],[],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[25]]],[]],[-1,[[11,[25]]],[]],[-1,2,[]],[-1,2,[]],[111],[-1,[[50,[33]]],[]],[-1,[[50,[33]]],[]],[[76,76,76,76,114,45,9],111],[[[11,[9]],2],112],[[-1,9],13,[]],[[-1,9],13,[]],[111,13],[[-1,33],13,[]],[[-1,33],13,[]],[111,13],[111,13],[111,13],[111,13],[111,13],[111,13],[-1,[[22,[51]]],[]],[-1,[[22,[51]]],[]],[[],-1,[]],[[],-1,[]],[[[22,[-1]]],13,[]],[[[22,[-1]]],13,[]],[[[52,[-1]]],13,53],[[[52,[-1]]],13,53],[[111,-1],[[11,[24]]],20],[[112,-1],[[11,[24]]],20],0,0,[[-1,9],-2,[],54],[[-1,9],-2,[],54],[[-1,9],[[11,[46]]],[]],[[-1,9],[[11,[46]]],[]],[[-1,9],25,[]],[[-1,9],25,[]],[111],[111],[[-1,32],[[11,[[34,[-2]]]]],[],[]],[[-1,32],[[11,[[34,[-2]]]]],[],[]],[-1,55,[]],[-1,55,[]],[112,115],[-1,13,[]],[-1,13,[]],[112,13],[[111,-1],13,116],[[-1,9,-2],13,[],[]],[[-1,9,-2],13,[],[]],[[111,-1],13,116],[[111,-1],13,116],[[-1,[26,[[13,[9,36]]]]],13,[]],[[-1,[26,[[13,[9,36]]]]],13,[]],[[-1,[26,[[13,[9,25]]]]],13,[]],[[-1,[26,[[13,[9,25]]]]],13,[]],[[-1,9,-2],13,[],[[7,[25]]]],[[-1,9,-2],13,[],[[7,[25]]]],[[-1,9,25],13,[]],[[-1,9,25],13,[]],[[111,-1],13,116],[[111,-1],13,116],[[-1,32,-2],13,[],[]],[[-1,32,-2],13,[],[]],[[111,-1],13,116],[[111,-1],13,116],[112,13],[112,13],[112,13],[112,13],[111],[[],46],[[],46],[[-1,9],[[11,[-2]]],[],[]],[[-1,9],[[11,[-2]]],[],[]],[[-1,32],[[11,[-2]]],[],[]],[[-1,32],[[11,[-2]]],[],[]],[[-1,31,[11,[32]]],13,[]],[[-1,31,[11,[32]]],13,[]],[[-1,9],13,[]],[[-1,9],13,[]],[111],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[[[11,[25]]],[[57,[-1,56]]],[]],[[[11,[25]]],[[57,[-1,56]]],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,46,[]],[-1,46,[]],[-1,59,[]],[-1,59,[]],[[-1,21],13,[]],[[-1,21],13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],13,[],[[61,[60]]]],[[-1,-2],13,[],[[61,[60]]]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],13,[],[]],0,0,0,0,0,[118,13],0,[[],119],[[],120],[[],118],[[],[[26,[33]]]],[[120,45,33],25],[[120,45,25,33],13],[120,-1,[]],[118,-1,[]],[[117,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[-1,64,[]],[-1,64,[]],[[-1,46],[[11,[-2]]],[],[65,18,29]],[[-1,46],[[11,[-2]]],[],[65,18,29]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],120],[[],118],[-1,64,[]],[-1,64,[]],[[],[[26,[33]]]],[[120,45,33],25],0,0,[-1,[[66,[-2]]],[],[]],[-1,[[66,[-2]]],[],[]],0,0,0,0,[[120,45,25,33],13],0,0,[-1,-2,[],[]],[-1,[[57,[-2]]],[],[]],[45,[[57,[117,-1]]],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[[],46],[[],46],[[],[[34,[68]]]],[[],[[34,[68]]]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,13],[[[11,[[13,[9,9]]]],[11,[93]],[26,[79]],3],[[11,[[13,[9,121]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[122,38],39],[[122,38],39],[123,122],[-1,-1,[]],[[],[[82,[[13,[108,108]]]]]],[-1,-2,[],[]],[9,[[82,[93,122]]]],[[1,5,9],13],[[5,9],13],[[5,9],13],[5,13],[122,[[11,[124]]]],[-1,76,[]],[-1,[[57,[-2]]],[],[]],[-1,[[57,[-2]]],[],[]],[-1,59,[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Application",1063],[1,"bool"],[1,"u128"],[6,"LyricDisplay",195],[5,"Window",31],[6,"Align",1064],[10,"Into",1065],[10,"Copy",1066],[1,"str"],[5,"Label",1067],[6,"Option",1068],[6,"MessageType",1069],[1,"tuple"],[5,"Window",1070],[10,"IsA",1071],[5,"WeakRefNotify",1071],[10,"FnOnce",1072],[10,"Send",1066],[5,"BindingBuilder",1071],[10,"ObjectType",1071],[5,"SignalHandlerId",1073],[5,"Class",1071],[10,"IsClass",1071],[6,"Ordering",1074],[5,"Value",1075],[1,"slice"],[17,"Output"],[10,"Fn",1072],[10,"Sync",1066],[5,"RustClosure",1076],[5,"SignalId",1077],[5,"Quark",1078],[5,"ParamSpec",1079],[5,"NonNull",1080],[5,"WeakRef",1071],[10,"ToValue",1075],[10,"TryFromClosureReturnValue",1076],[5,"Formatter",1081],[8,"Result",1081],[5,"PropertyNotificationFreezeGuard",1071],[5,"GPtrArray",1082],[5,"Vec",1083],[5,"GSList",1082],[5,"GList",1082],[1,"usize"],[5,"Type",1084],[10,"Hasher",1085],[5,"InterfaceRef",1071],[10,"IsInterface",1071],[5,"PtrSlice",1086],[5,"Object",1071],[5,"InitializingObject",1087],[10,"ObjectSubclass",1087],[10,"FromValue",1075],[1,"u32"],[5,"BoolError",1088],[6,"Result",1089],[5,"Settings",1090],[5,"TypeId",1091],[5,"Closure",1076],[10,"AsRef",1065],[5,"Window",161],[6,"Propagation",1073],[5,"BorrowedObject",1071],[10,"Any",1091],[5,"ObjectImplRef",1092],[1,"i32"],[5,"TypeData",1087],[6,"Align",195],[5,"Config",195],[5,"Triggers",195],[10,"Deserializer",1093],[10,"Serializer",1094],[6,"LyricOwned",280],[5,"LyricLineOwned",280],[5,"String",1095],[6,"Lyric",280],[5,"LyricLine",280],[5,"SongInfo",280],[6,"Error",280],[10,"LyricProvider",280],[8,"Result",1096],[10,"LyricParse",280],[5,"LyricStore",280],[10,"Future",1097],[5,"Box",1098],[5,"Pin",1099],[5,"Netease",407],[5,"QQMusic",428],[6,"Error",428],[5,"QQMusicApi",1100],[5,"Client",1101],[5,"Duration",1102],[5,"Arc",1103],[6,"LrcParseError",1104],[17,"Item"],[10,"Iterator",1105],[5,"TrackMeta",469],[5,"TrackState",469],[5,"LyricState",469],[5,"PlayerId",546],[5,"Metadata",1106],[6,"PlayerStatus",546],[5,"Error",1096],[5,"Player",1107],[6,"LyricHint",619],[5,"LyricCache",598],[5,"PathBuf",1108],[5,"Digest",1109],[6,"LyricHintResult",619],[5,"ResultObject",652],[5,"Window",652],[5,"ColumnViewColumn",1110],[1,"u64"],[5,"ListStore",1111],[10,"Borrow",1112],[6,"DerivedPropertiesEnum",940],[5,"Window",940],[5,"ResultData",940],[5,"ResultObject",940],[1,"u8"],[6,"ParseError",1040],[6,"Error",1113],[10,"Error",1114],[15,"SongId",644],[15,"Lyric",646]],"b":[[334,"impl-Display-for-Error"],[335,"impl-Debug-for-Error"],[440,"impl-Debug-for-Error"],[441,"impl-Display-for-Error"],[1046,"impl-Debug-for-ParseError"],[1047,"impl-Display-for-ParseError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
